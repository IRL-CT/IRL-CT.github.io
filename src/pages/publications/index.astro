---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import DoiPaperFeed from "@components/DoiPaperFeed.astro";

// Get publications and sort them
const publications = await getCollection("publications");

// Sort featured publications first, then by date
const sortedPublications = publications
  .filter(pub => !pub.data.draft)
  .sort((a, b) => {
    // Featured publications first
    if (a.data.featured && !b.data.featured) return -1;
    if (!a.data.featured && b.data.featured) return 1;
    
    // Then by publication date
    const dateA = a.data.manual_override?.publication_date 
      ? new Date(a.data.manual_override.publication_date) 
      : new Date(0);
    const dateB = b.data.manual_override?.publication_date 
      ? new Date(b.data.manual_override.publication_date) 
      : new Date(0);
      
    // Sort newest first
    return dateB.getTime() - dateA.getTime();
  });
---

<Layout title="Publications | IRL: Interaction Research Lab">
  <Header activeNav="publications" />
  <div class="mx-auto mx-auto w-full max-w-5xl px-4 pb-12">
    <main id="main-content" class="publications-container">

      <div class="search-container">
        <h2>Search Publications</h2>
        <div class="search-input-wrapper">
          <input 
            type="text" 
            id="publication-search" 
            placeholder="Search by title or author..." 
            class="search-input"
          />
          <button id="clear-search" class="clear-search" title="Clear search">Ã—</button>
        </div>
      </div>
      
      <div class="publications-feed">
        <DoiPaperFeed 
          publications={sortedPublications} 
          title="All Publications" 
          showViewAllLink={false}
          maxItems={500}
          itemsPerPage={20}
          enablePagination={true}
          searchInputId="publication-search"
          className="publications-complete-feed"
        />
      </div>
    </main>
  </div>
  <Footer />
</Layout>

<style>
  .publications-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2rem 1.5rem;
  }
  
  h1 {
    font-size: 2.5rem;
    color: rgb(var(--color-accent));
    margin-bottom: 1rem;
  }
  
  .page-description {
    font-size: 1.125rem;
    line-height: 1.6;
    margin-bottom: 2rem;
    max-width: 800px;
  }
  
  .search-container {
    margin-bottom: 2rem;
    width: 100%;
  }
  
  .search-container h2 {
    font-size: 1.25rem;
    margin-bottom: 0.8rem;
    color: rgb(var(--color-accent));
  }
  
  .search-input-wrapper {
    position: relative;
    width: 100%;
  }
  
  .search-input {
    width: 100%;
    padding: 0.875rem 2.5rem 0.875rem 1rem;
    border-radius: 0.5rem;
    border: 2px solid rgba(var(--color-border), 0.3);
    background-color: rgba(var(--color-card), 0.5);
    color: rgb(var(--color-text-base));
    font-size: 1.1rem;
    transition: all 0.2s ease;
    box-shadow: 0 2px 6px rgba(0,0,0,0.05);
  }
  
  .search-input:focus {
    outline: none;
    border-color: rgb(var(--color-accent));
    box-shadow: 0 0 0 3px rgba(var(--color-accent), 0.2);
  }
  
  .clear-search {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: rgba(var(--color-text-base), 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    transition: color 0.2s ease;
  }
  
  .clear-search:hover {
    color: rgb(var(--color-text-base));
  }
  
  .publications-feed {
    background-color: rgba(var(--color-card), 0.3);
    border-radius: 0.5rem;
    padding: 1.5rem;
    min-height: 500px;
    width: 100%;
  }
</style>
